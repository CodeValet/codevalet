#!/bin/bash

BUILD_DIR=$PWD/build
REPOS_DIR=$BUILD_DIR/repos
SCRIPTS_DIR=$(realpath $(dirname $0))
PLUGINS_OUTPUT_DIR=$BUILD_DIR/plugins
BUILDER_CONTAINER="rtyler/codevalet-builder"

mkdir -p $REPOS_DIR
mkdir -p $PLUGINS_OUTPUT_DIR

declare -A PROCESSED

function cloneWithDependencies() {
  if [ ! ${PROCESSED[$1]} ]; then
    PROCESSED[$1]="$1"
    if [ ! -d $1 ];  then
        git clone --depth 1 git://github.com/jenkinsci/$1.git
    fi;

    for pom in $(find $1 -iname 'pom.xml' -type f); do
        (cd $(dirname $pom) && ${SCRIPTS_DIR}/plugins-from-pom 'pom.xml')
    done;

    for dep in $(find $1 -iname '.plugins.txt' -type f -exec cat {} \; | sort -u); do
        cloneWithDependencies "${dep}-plugin"
    done;
  fi;
}

pushd $REPOS_DIR

  # NOTE: Some repositories, for some reason, are not located in the jenkinsci
  # organization like they should be. This hacks around that:
  #  https://issues.jenkins-ci.org/browse/JENKINS-45665
  #git clone --depth 1 git://github.com/tfennelly/jquery-detached.git jquery-detached-plugin
  #git clone --depth 1 git://github.com/tfennelly/jenkins-ace-editor.git ace-editor-plugin
  git clone --depth 1 git://github.com/jenkinsci/js-libs.git js-libs-plugin
  # https://issues.jenkins-ci.org/browse/JENKINS-45668
  (cd js-libs-plugin && find . -maxdepth 1 -type d -exec mkdir -p {}/src/main/webapp/jsmodules \;)


  for plugin in $(cat $SCRIPTS_DIR/../plugins.txt); do
    cloneWithDependencies $plugin
  done;

  set -e
  for d in *-plugin; do
      pushd $d

        if [ -f pom.xml ]; then
          echo ">> Building $d"
          git pull --rebase
          docker run --rm -ti -v $HOME/.m2:/root/.m2 \
            -e HOME=/data \
            -u $(id -u):$(id -g) \
            -v $PWD:/data -w /data ${BUILDER_CONTAINER} mvn install -DskipTests
        fi;
      popd
  done;
  set +e

  for hpi in $(find . -iname "*.hpi" | grep -v "test-classes" | grep -v "target/plugins/"); do
      cp $hpi $PLUGINS_OUTPUT_DIR
  done;
popd
